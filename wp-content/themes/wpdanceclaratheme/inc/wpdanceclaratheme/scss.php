<?php
namespace wpdanceclaratheme\Scss;


require_once get_template_directory().'/inc/wpdanceclaratheme/scss/preset.php';





###########################################################################
# DEFINE WP HOOKS
###########################################################################

add_action('wp_enqueue_scripts', __NAMESPACE__.'\\wp_enqueue_scripts');





###########################################################################
# DEFINE HOOK CALLBACK FUNCTIONS
###########################################################################



if (!function_exists(__NAMESPACE__.'\\wp_enqueue_scripts')):
/**
 * Compile SCSS file to CSS and enqueue to head tag
 */
function wp_enqueue_scripts() {
	global $wp_customize;

	$wp_filesystem = \wpdanceclaratheme\Helper\wp_filesystem();

	$preset_name = sanitize_key(get_theme_mod('wpdanceclaratheme_style_presets_preset', 'default'));

	#
	# Try to use the preset specified in $_REQUEST if possible
	#
	if (isset($_REQUEST['preset']) && !empty($_REQUEST['preset']) 
		&& ($s = sanitize_key(strtolower($_REQUEST['preset']))) 
		&& \wpdanceclaratheme\Scss\Preset\preset_exists($s))
		$preset_name = $s;
	

	# Suffix of all generated scss files
	$suffix = $preset_name;

	# Flag to check whether the css files should generate or not
	$create = false;
	
	# Is viewing Customizer ?
	# Check if there is changed in Typo or Colors theme options, then use css preset-preview.css
	if (is_customize_preview()) {

		$style_mods  = array();
		$post_values = $wp_customize->unsanitized_post_values();

		foreach ($post_values as $k => $v)
			if (strpos($k, 'wpdanceclaratheme_style_') === 0)
				$style_mods[$k] = $wp_customize->post_value($wp_customize->get_setting($k));

		if (!empty($style_mods)) {
			$style_mods['wpdanceclaratheme_style_presets_preset'] = $preset_name;

			$hash = md5(serialize($style_mods));
			if ($hash != get_theme_mod('wpdanceclaratheme_hash_style')) {

				# Store style changing hash so that preview css is not regenerated next time.
				set_theme_mod('wpdanceclaratheme_hash_style', $hash);

				# Let create preset-preview.css because it is changed
				$create = true;
			}

			# use preset-preview.css because there is changes on typo and color.
			$suffix = 'preview';
		}
	}


	/**
	 * CSS file main.css locates in child theme css/ folder or main theme css/ folder
	 */

	$preset_file     = get_template_directory().'/css/preset-'.$suffix.'.css';
	$preset_map_file = get_template_directory().'/css/preset-'.$suffix.'.css.map';
	$preset_uri      = get_template_directory_uri().'/css/preset-'.$suffix.'.css';
	
	$settings_import = 'settings-'.$suffix;
	$settings_file   = get_template_directory().'/scss/preset/tmp/_settings-'.$suffix.'.scss';
	
	$varcss_import   = 'varcss-'.$preset_name;
	$varcss_file     = get_template_directory().'/scss/preset/tmp/_varcss-'.$preset_name.'.scss';

	$mixins_import   = 'mixins';
	$mixins_file     = get_template_directory().'/scss/preset/tmp/_mixins.scss';


	# Mark generating CSS files if not exist
	$create |= !$wp_filesystem->is_file($preset_file);


	# Regenerate SCSS & CSS files if required
	if ($create || \wpdanceclaratheme\Config::CSS_DEV_MODE) {

		#
		# Write to file scss/tmp/_settings-XXX.scss
		#
	
		$s = <<<EOB
/**
* DO NOT EDIT THIS FILE
* IT IS OVERWRITTEN WHEN SETTINGS ARE CHANGED
*/

EOB;
		$preset_vars = namespace\Preset\get_preset_vars($preset_name);
		foreach ($preset_vars as $k => $old) {
			$new = get_theme_mod('wpdanceclaratheme_'.$k, '');
			if (isset($new) && $new !== '' && $new != $old)
				$s .= sprintf("\$%s:%s;\n", $k, $new);
		}
		$wp_filesystem->put_contents($settings_file, $s);
	


		#
		# Write to file scss/tmp/_varcss-XXX.scss
		#
		if (!$wp_filesystem->exists($varcss_file) || \wpdanceclaratheme\Config::PHP_DEV_MODE || \wpdanceclaratheme\Config::CSS_DEV_MODE) {
		
			$s = <<<EOB
/**
 * DO NOT EDIT THIS FILE
 * IT IS OVERWRITTEN WHEN SETTINGS ARE CHANGED
 */

EOB;
			$s .= namespace\Preset\generate_variable_helper_classes(array_keys($preset_vars));
			$wp_filesystem->put_contents($varcss_file, $s);
		}


		#
		# Write to file scss/tmp/_mixins.scss
		#
		if (!$wp_filesystem->exists($mixins_file) || \wpdanceclaratheme\Config::PHP_DEV_MODE || \wpdanceclaratheme\Config::CSS_DEV_MODE) {
		
			$s = <<<EOB
/**
 * DO NOT EDIT THIS FILE
 * IT IS OVERWRITTEN WHEN SETTINGS ARE CHANGED
 */

EOB;
			$s .= namespace\Preset\generate_mixins(array_keys($preset_vars));
			$wp_filesystem->put_contents($mixins_file, $s);
		}


		#
		# Generate css file css/preset-XXX.css
		#

		$scss = compiler();

		$import_preset_custom = '';
		if ($wp_filesystem->exists(get_template_directory().'/scss/preset/theme/_preset_'.$preset_name.'.scss'))
			$import_preset_custom = '@import preset/theme/preset_'.$preset_name.';';

		$s = "/* Generated at: ".date('Y-m-d H:i:s')." */\n";

		if (isset($style_mods))
			$s .= "/*\nCustomizer: \n" . print_r($style_mods, true) . "\n*/\n";

		$ret = $scss->compile("
			$s
			@import 'preset/tmp/$settings_import';
			@import 'preset/variables_$preset_name';
			@import 'preset/variables_base';

			@import 'preset/tmp/$mixins_import';
			@import 'preset/tmp/$varcss_import';

			@import 'preset';

			$import_preset_custom
		");
	
		# Create main.css in the child theme (or main theme) css/ folder
		$wp_filesystem->put_contents($preset_file, $ret);
	
	}
	

	$ver = WP_DEBUG || \wpdanceclaratheme\Config::CSS_DEV_MODE || is_customize_preview() 
		? time() 
		: (\wpdanceclaratheme\Config::VERSION . '-' . get_theme_mod('wpdanceclaratheme_hash_style'));
	
	wp_enqueue_style('wpdanceclaratheme-main', get_template_directory_uri().'/css/main.css', array(), \wpdanceclaratheme\Config::VERSION);
	wp_enqueue_style('wpdanceclaratheme-preset', $preset_uri, array(), $ver);
	wp_enqueue_style('wpdanceclaratheme-custom', get_template_directory_uri().'/css/custom.css', array(), \wpdanceclaratheme\Config::VERSION);
	wp_enqueue_style('wpdanceclaratheme', get_stylesheet_uri(), array(), \wpdanceclaratheme\Config::VERSION);
}
endif;







###########################################################################
# DECLARE OTHER FUNCTIONS
###########################################################################

if (!function_exists(__NAMESPACE__.'\\compiler')):
/**
 * Return Scss Compiler object
 *
 * @return Leafo\ScssPhp\Compiler
 */
function compiler() {
	if (!class_exists('Leafo\ScssPhp\Compiler'))
		require_once get_template_directory().'/inc/scssphp/scss.inc.php';

	$scss = new \Leafo\ScssPhp\Compiler();
	// $scss->setFormatter('Leafo\ScssPhp\Formatter\Compressed');
	$scss->setFormatter('Leafo\ScssPhp\Formatter\Expanded');
	$scss->setImportPaths(array(
		get_template_directory().'/scss',
		__DIR__.'/../scss'
	));

	return $scss;
}
endif;





